			内部类
　		
		类的访问权限有2种 public default
			
		是外部类的一种特殊成员 访问权限和类的成员一样 private default protected public
		
	(1)、内部类仍然是一个独立的类，在编译之后内部类会被编译成独立的.class文件，
		但是前面冠以外部类的类名和$符号。
	
	(2)、内部类不能用普通的方式访问。内部类是外部类的一个成员，
	因此内部类可以自由地访问外部类的成员变量，无论是否是private的。
	
	(3)、内部类声明成静态的，就不能随便的访问外部类的成员变量，仍然是只能访问外部类的静态成员变量。


	1.静态内部类static inner class (also called nested class)
　　			
			 可以访问外部类的静态成员 并且它只能访问静态的
	
	2.成员内部类member inner class
　　	
			成员内部类就像一个实例变量。
　　		
			它可以访问它的外部类的所有成员变量和方法，不管是静态的还是非静态的都可以。
	
	3.局部内部类local inner class
　　			
			局部内部类定义在方法中，比方法的范围还小。是内部类中最少用到的一种类型。
　　			
			像局部变量一样，不能被public, protected, private和static修饰。
　			
			只能访问方法中定义的final类型的局部变量。
　　		
			局部内部类在方法中定义，所以只能在方法中使用，即只能在方法当中生成局部内部类的实例并且调用其方法。
		
	4.匿名内部类anonymous inner class
　		　		
			就是没有名字的局部内部类，不使用关键字class, extends, implements, 没有构造方法。
　　			
			隐式地继承了一个父类或者实现了一个接口。
　　		
			使用得比较多，通常是作为一个方法参数。
　　		
			生成的.class文件中，匿名类会生成OuterClass$1.class文件，数字根据是第几个匿名类而类推
	
	