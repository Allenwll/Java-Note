					HTML 超文本标记语言（Hyper Text Markup Language）。
		
	网络三大基石
		
		URL 统一资源定位符 Uniform Resource Locator
		
		Http协议 超文本传输协议	  Hyper Text  Transfer Procotol
		
		HTML 超文本标记语言 Hyper Text Markup Language
		
	
	HTML文件是一个包含标记的文本文件。 

	这些标记告诉浏览器怎样显示这个页面。 

	HTML文件必须有htm或者html扩展名。 
	
		
	html和htm两者之间有什么区别？
		
		1.htm与.html没有本质上的区别，表示的是同一种文件，只是适用于不同的环境之下。
　　	
		2、DOS仅能识别8+3的文件名，所以*.htm的命名方法可以被DOS识别，而*.html的文件命名方式不能被之识别。
　　
		3、在UNIX系统中，网页必须使用.html扩展名，如果是htm，在浏览器中打开时则出现源代码；
			
			Windows中支持两种扩展名。也可以说，htm和html是Windows和UNIX对抗的产物。
　
		4、如果在网页中同时存在index.html与index.htm，这是浏览器将先解释index.html。	
		
		
	超文本
		
		包含文本、视频、音频、图片等
		
		具有超链接功能的文本
	
 标签	

	HTML标签用来组成HTML元素。

	HTML标签两端有两个包括字符："<"和">",这两个包括字符被称为角括号。

	HTML标签通常成对出现,一对标签的前面一个是开始标签，第二个是结束标签,在开始和结束标签之间的文本是元素内容。

	HTML标签是大小写无关的，<b>跟<B>表示的意思是一样的。
		
  Details:	
	
	开始，结束标签
		
		<html>  第一个标签  告诉浏览器是HTML文档的开始。

		</html> 最后一个标签  告诉浏览器是HTML文档的终止。
	
	头
	
		<head>和</head>标签之间文本的是头信息。在浏览器窗口中，头信息是不被显示的	
	
	文档标题

		<title>和</title>标签之间的文本是文档标题，它被显示在浏览器窗口的标题栏。

	身体
	
		<body>和</body>标签之间的文本是正文，会被显示在浏览器中。
	
	加粗显示
	 
		<b>和</b>标签之间的文本会以加粗字体显示 
	
	标题元素

		标题元素由标签<h1>到<h6>定义。<h1>定义了最大的标题元素，<h6>定义了最小的。
		
		HTML自动在一个标题元素前后各添加一个空行。
	
	段落

		段落是用<p>标签定义的。
		
		HTML自动在一个段落前后各添加一个空行。
	
	换行

		当需要结束一行，并且不想开始新段落时，使用<br>标签。
		
		<br>标签不管放在什么位置，都能够强制换行。
	
		<br>标签是一个空标签，它没有结束标记。
	
	
	注释标签
		
		<!--  -->
		
		用来在HTML源文件中插入注释。
		
		注释会被浏览器忽略。
		
		你需要在左括号“<”后面跟一个感叹号，右括号不用。

	水平线
	
		<hr>标签
		
	格式化文本
		
		<strong></strong>

	预格式化文本：
		
		pre标签来控制换行和空格。

	<code></code>
	
	地址：
	
		<address> </address>
		
	缩写和首字母缩略法：	
		
		<abbr title="United Nations">UN</abbr>

		<acronym title="World Wide Web">WWW</acronym>
	
	文字方向：	
	
		<bdo dir="rtl"> </bdo>
	
	块引用：
		
		<blockquote> </blockquote>
	
	删除和插入文字：
	
		<del>twenty </del>
		
		<ins>twelve </ins>
		
	加粗 <b></b>  <strong> </strong>
	
	下划线 <u></u>  
	
	倾斜 <i></i>
	
	提示
		
		placeholder  写在标签内
	
marquee标记
		
	<marquee  behavior="alternate" direction="up" >
			尚学堂欢迎您
	</marquee>
		
	方向 ：direction= left, right,up,down
	
	方式： behavior= scroll(循环), slide(只走一次), alternate(来回走)
	
		
标签属性
	
	标签可以拥有属性。属性能够为页面上的HTML元素提供附加信息。
	
	属性值应该被包含在引号中。双引号是最常用的，但是单引号也可以使用。
	
	在很少情况下，比如说属性值本身包含引号，使用单引号就很必要了。	
	
	比如：name='John "ShotGun" Nelson'。	
	
	注意：中文引号跟英文引号是不一样的。上面所指的引号都是英文状态下的引号。
	

块级元素：

	具有独占一行，自动换行的标签。例如：p,h#标签

行内元素：

	具有修饰内容大小而变化的标签。例如：b,u ,i 
		     
锚链接

		创建锚点

		建立连接
		
超链接标签
	
		<a></a>
		
		属性：

			href:链接地址
		
			target:打开方式（在哪里打开链接页面）
		
		锚链接：
			
			1).定义锚点
					<a name="锚点名称">显示文本</a>
			2).建立链接
					<a href="#对应锚点名称">显示文本</a>
					
		回到顶部：
				
				<a href="#">回到顶部</a>

图片标签 
	
	<img/>
	
	属性：
		
		src :

			源路径
		
		title:
			
			文本的描述  鼠标悬停时
		
		alt:
			
			图片路径错误时 提示信息  
				
			提供给搜索引擎
	
视频,音频标签
	
	<embed/>	src
	
	H5提供 <audio > 音频   src 引用资源路径  controls 工具条
	
	H5 提供 <video> 视频   src 引用资源路径  controls 工具条
 
 
 
列表 

	无序列表
		
		<ul type="none">  type = none 无  circle  空心圆  disc  实心圆   square 矩形
 													
			<li></li>   li的style： li{ dispaly:inline;} 可以将块级元素转成行级
			
		</ul>
		
	有序列表
		
		<ol type="a" start="3">  type="a"  以字母排序  start="3" 从第三位开始
			                  
			<li>
		</ol>
		
	自定义列表	
		<dl>
			<dt 列表描述信息/>
			
			<dd 列表详细信息></dd>
			
		</dl>
	
	<span> 
			
		类似 div
		
		行级元素
		
		表单验证
			
	</span>
		
	布局： table、frame、div	

表格

	表格标记table
	
	行标记 tr

	标题行单元格标记th 
		
		th 字符加粗、居中对齐
		
	单元格标记td
		
		td 字符正常、居左对齐
	
	列Column  行row   单元格Cell
	
	合并单元格：
	  
	  按行合并：rowspan="合并单元格个数"
	   
	  按列合并：colspan="合并单元格个数"
	   
	  步骤：
		
		1).先在对应单元格中添加属性
		 
		 2).删除不需要的单元格
		
			删除个数=合并单元格个数-1
	
	border 边框  width 宽度 height 高度    cellspacing 单元格与单元格之间的距离    cellpadding 单元格边框与单元格内容之间的距离
 
 
	隐藏边框 table 的style 属性  border：none； 所有  border-bottom， -top，-left，-right
 
	分组标签<thead>、<tbody>、<tfooter>配合使用，对报表数据进行逻辑分组 
	
	页眉<thead>  数据主体<tbody>  页脚<thfoot>  表格标题<caption>  表头<th>
	

通用块标记
		
		div
			
		块级元素	
		
		
		

框架
		frameset 框架集
	
	框架是一种在一个网页中显示多个网页的技术
	
	通过超级链接可以为框架之间建立内容之间的联系，从而实现页面导航。
	
	
	实现窗口间关联的步骤
		
		设置窗口名（框架主页）	

		设置<a>的target属性（窗口子页面 ）
	
	框架的基本结构:
	
		框架集frameset
		
		框架frame。
	
	在网页文件中，使用框架集的页面的<body>标记将被<frameset>标记替代，然后在利用<frame>标记去定义框架结构。
	
	每个框架frame由一个单独的 HTML 页面组成。
	
	框架支持嵌套
		
		当一个框架集中既有左右分割，又有上下分割是，就要用到框架嵌套。
	
	
	
	target的其他用法
		
		在新窗口中显示：_blank
		
		在自身窗口中显示：_self
		
		在上级窗口显示：_top
		
		在父窗口显示：_parent 
		
		在对应框架中显示  框架名称

	注意事项
			
		不能与 <frameset> 标签一起使用 <body>标签
			
		如果需要为不支持框架的浏览器添加一个 <noframes> 标签，请务必将此标签放置在 <body></body> 标签中！

	iframe ：
		
		Inline Frame   
	
	    内联框架  行内框架 浮动框架	 行内元素
		
		<frameset>需要使用多个文件，目录结构复杂 
		
		内嵌较为灵活，可以在网页的任何位置使用

	注意事项
		
		写在body中
		
		必须使用</iframe>关闭标签  
		
		直接在某个网页中内嵌frame，不需要框架主页

	框架集frameset:
		
		<frameset rows="按行划分区域" cols="按列划分区域">
			
			<frame src="引入资源路径"/>
		
		</frameset>
		
		rows and cols 可以是百分比也可以是固定值
			

表单
   
    HTML表单是HTML页面与浏览器端实现交互的重要手段。利用表单可以收集客户端提交的有关信息。

	在HTML里，我们可以定义表单，并且使表单JSP/ASP/PHP等服务器端的表单处理程序配合。此处不涉及服务器端处理。

	表单是网页上的一个特定区域。这个区域是由一对<form>元素定义的
	
	action属性：用来定义表单处理程序（一个ASP、JSP等程序）的位置
	
	method定义表单结果从浏览器传送到服务器的方法，一般取值是get或post。
	

	target：
	
		该属性规定在何处显示action属性中指定的URL所返回的结果。
		
		取值有_blank（在新窗口中打开）、_self（在相同的框架中打开，默认值）、
		
		_parent（在父框架中打开）、_top（在整个窗口中打开）和framename（在指定的框架中打开）。

　　title：
	
		设置网站访问者的鼠标放在表单上的任意位置停留时，浏览器用小浮标显示的文本。

　  enctype：
			
			规定在发送到服务器之前应该如何对表单数据进行编码。取值：默认值为 "application/x-www-form-urlencoded"，在发送到服务器之前，所有字符都会进行编码（空格转换为 "+" 加号，特殊符号转换为 ASCII HEX 值）；“multipart/form-data”：不对字符编码。在使用包含文件上传控件的表单时，必须使用该值。

　　name:

			表单的名称。
			
			注意和id属性的区别：
			
			name属性是和服务器通信时使用的名称；
			
			而id属性是浏览器端使用的名称
			
			该属性主要是为了方便客户端编程，而在css和javascript中使用的。 
	
	
		get : 默认模式是 get
			
			是在url后面加上传送字符串
			
			传送资料会显示在浏览器地址栏上
			
			会有安全问题，传送资料量不可太大。
		
		post :
		
			传送的表单信息作为http request一部分
			
			资料不会显示在地址栏上，传送资料量大
	
	只读和禁用属性
		
		readonly：
		
			只读属性，当设置readonly属性后，文本框可以获得焦点，但用户不能改变文本框中的value。 
　　　	
		disabled：
		
			禁用，当文本框被禁用时，不能获得焦点，当然，用户也不能改变文本框的值。
			
			并且在提交表单时，浏览器不会将该文本框的值发送给服务器。 

		
	get和post区别
		
		get方式特点： 查询信息 
			
			1.请求参数存放在地址栏
			
			2.数据不安全
			
			3.有缓存
			
			4.传输资料量小
			
			5.数据大小受限制
		
		post方式特点：
			
			1.请求参数存放在http request上  http协议中的实体内容中 
			
			2.数据相对安全
			
			3.无缓冲
			
			4.传输资料量大
			
			5.数据大小限制较小
	
	为什么默认是get?
		
		网络最常用的操作是获取信息，get有缓存，能够提高用户访问速度
		
	表单提交地址？请求参数 

	请求参数1&请求参数2
	
	请求参数 ： name 属性值=空间value属性值
	
	
	表单域
		
		<input/>
			
			type 控件类型
				
				text 默认的  文本框
					
					size：指定文本框的宽度，以字符个数为单位；在大多数浏览器中，文本框的缺省宽度是20个字符。

　　　　			value：指定文本框的值，是在浏览器第一次显示表单或者用户单击按钮之后在文本框中显示的值。

					defaultValue:文本框默认值
					
　　　　			maxlength：指定用户输入的最大字符长度。

　　　　			readonly：只读属性，当设置readonly属性后，文本框可以获得焦点，但用户不能改变文本框中的value。

　　　　			disabled：禁用，当文本框被禁用时，不能获得焦点，当然，用户也不能改变文本框的值。并且在提交表单时，浏览器不会将该文本框的值发送给服务器。 
				
				password  密码框
				
				hidden 隐藏域
					
					隐藏域通常用于向服务器提交不需要显示给用户的信息。 
					
				button 按钮
				
				submit 提交按钮
				
				reset 重置按钮
				
				radio 单选按钮 

						由 name 属性值来划分组，属性值相同的为一组

						当没有设置value 时 默认提交 on  

						checked=checked  默认选中值
						
				file 文件上传
					
					使用file，则form的enctype必须设置为multipart/form-data，method属性为POST。 
					
				lable标签
						
					单击修饰文本的时候input并不会得到焦点，而用label则可以，
					
					for属性指定要修饰的控件的id、内容；
					
					然后按下Alt+U。accesskey="U"
					
					label的另一个属性。
					
					要为被修饰的控件设置一个唯一的id。
					
				fieldset标签
				
					将控件划分一个区域，看起来更规整。 
					
				图像按钮的src属性指定图像源文件，它没有value属性。图像按钮可代替，而现在也可以通过css直接将按钮的外观设置为一幅图片。 
					
		checkeddbox 复选框
						
				特点与单选按钮形同
			
			name: 控件名称
		
			value  空间内容
		   
		<select name="属性">  下拉菜单
		
				<option value="值" selected="selected">选项文本</option>
				
			特点：
				
				当下拉列表没有设置value属性时，默认提交的是选项文本
			
		<textarea>  文本域
				
				name: 控件名
				
				rows： 行数
				
				cols: 列数
				
				设置不可随意改变文本域的大小：	style="resize:none;"
字符实体

	在HTML中，有些字符拥有特殊含义，比如小于号“<”定义为一个HTML标签的开始。
	
	假如我们想要浏览器显示这些字符的话，必须在HTML代码中插入字符实体。

	一个字符实体拥有三个部分：一个and符号（&），一个实体名或者一个实体号，最后是一个分号（;）

	想要在HTML文档中显示一个小于号，我们必须这样写：&lt;或者&#60;
	
	实体名是大小写敏感的。

	
	最常用的字符实体

		显示结果 		描述 		实体名		 实体号 
	
				  不可拆分的空格    &nbsp;		 &#160; 
				  
					tab制表符       &emsp; 
	
		< 			小于			 &lt;		 &#60; 
	
		> 			大于			 &gt;		 &#62; 
	
		& 			and符号			 &amp;		 &#38; 
	
		"			 引号			 &quot;		 &#34; 
	
		' 			单引号 			 &apos;		 &#39; 



	其他一些常用的字符实体

		显示结果		 描述  		实体名		    实体号  
	
		￠ 分			  分		 &cent;			&#162; 
	
		￡ 英镑          英镑		 &pound;		&#163; 
	
		￥ 人民币元 	人民币		&yen;			&#165; 
		
		§ 章节 	   		 章节		&sect; 			&#167; 
	
		? 版权 		 	 版权		&copy;			&#169; 
	
		? 注册 			注册		&reg; 			&#174; 

		× 乘号			乘号		&times; 		&#215; 
	
		÷ 除号   	    除号		&divide;		&#247; 

		
		
