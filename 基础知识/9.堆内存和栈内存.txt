     堆内存和栈内存
	 
	是抽象数据类型  按序排列的数据结构
	
	暂时存放数据和地址，通常用来保护断点和现场
	
	堆： 
		
		队列优先
		
		先进先出 FIFO first in first out
		
		由程序员分配释放， 若程序员不释放，程序结束时可能由OS回收
		
		存放在二级缓存中，生命周期由虚拟机的垃圾回收算法来决定
		
		可以动态地分配内存大小，生存期也不必事先告诉编译器
		
		在运行时动态分配内存，存取速度较慢。
	
	栈：
		
		先进后出	FILO first in/last out
		
		由操作系统自动分配释放  存放函数的参数值，局部变量的值
		
		使用一级缓存 被调用时处于存储空间中，调用完毕立即释放。
		
		存取速度比堆要快，仅次于直接位于CPU中的寄存器
		
		存在栈中的数据大小与生存期必须是确定的，缺乏灵活性。
		
		另外，栈数据在多个线程或者多个栈之间是不可以共享的，
	
	栈空间
			栈空间存取数据的效率高
			
			栈中的数据按"先进后出"的方式管理
		
			栈空间存储空间较小，不能存放大量数据
	
			JVM将基本类型的数据存放在栈空间
	
	堆空间
			
			堆空间存取数据的效率最低
			
			数据存放的位置随机分配
			
			堆空间存储数据的空间大，能存放大容量的数据
	方法区
			
			存放class 代码
			
			存放static 变量
			
			存放 final常量