					56.SpringMVC
		
1.SpringMVC是Spring框架的一个Web组件,是一个MVC框架

2.执行效率
			
	Servlet--->Struts1---->SpringMVC------>Struts2+freemarker------>Struts2+ognl
	
3.SpringMVC优点
	
	1.执行效率较高
	
	2.支持Restful风格的开发
	
	3.天生和Spring无缝集成
	
	4.支持数据转换,格式化以及数据校验
	
	5.支持视图较多,xml,jsp,pdf等

	6.可以与Servlet API完全解耦
	
	7.完全使用注解进行驱动开发
	
	8.大多数公司使用
	
4.学习MVC框架必须要掌握的点
	
	a)将请求的URL映射到java类的处理方法上
	
	b)在java的处理方法中如何获取用户提交的数据
	
	c)如何将处理结果显示到视图中
	
	d)如何控制视图的跳转

5.SpringMVC执行流程
	
	发起请求--->服务器接收--->DispatcherServlet----->根据配置的HandlerMapping找到对应的处理器---
	
	----->获取适配器对象------->调用处理器来进行处理----->视图解析器----->响应
	
6.数据处理
	
	1)数据流入到处理类中
		
		a)ServletAPI可以自动注入到处理方法的属性上
		
		b)请求数据可以直接注入到方法的参数上,要求数据的key名和方法的参数名一致即可
	
		c)请求数据是个对象时,方法参数为对象即可
	
	2）将处理结果数据显示到页面中
	
		a)使用ModelAndView存储数据,在jsp中通过EL表达式获取

		b)使用Model将数据携带到前台显示，需要在方法参数中声明Model 类型的对象
		
		c)使用ModelMap
		
		d)使用注解@ModelAttribute在方法上 
		
		e)使用注解@SessionAttributes将指定的数据存入Session,在页面中可以从session中获取数据 该注解需放置在处理类上
		
		f)使用传统的ServletAPI将数据携带到前台
		
7.ModelAndView与ModelMap的区别

	ModelAndView可以指定视图名称 ModelMap不能
	
	ModelAndView和ModelMap都可以携带数据
	
8.处理方法的返回值类型
		
	a)void:返回值为空，并且没有使用ServletAPI进行跳转,那么默认将会以请求名作为视图名进行跳转
	
		参数中使用了ServletAPI并且在方法中使用ServletAPI进行了跳转,那么按ServletAPI跳转的位置进行跳转
	
	b)ModelAndView 当返回值为null时,不进行跳转； 当返回值没有指定视图名时,默认使用请求名作为视图名进行跳转

	c) String  当返回值为null   默认使用请求名作为视图名进行跳转,指定了返回值,按照返回值作为视图名进行跳转, 如果返回值带有"foraord"或者 "redirect"前缀 
	
	那么进行响应的请求转发和重定向,不能通过MVC的数据模型携带数据,可以通过ServletAPI携带数据
	
	d) 其他类型: 只能在异步时可以通过JSON返回
	
9.URL映射:Restful以及Ant

	Restful:表征状态转移
	
	Restful的好处:
		
		a)更加安全
		
		b)效率更高
		
		c)相同长度下,能够传递更多数据

		
	@PathVariable 从请求的路径中获取值

10.在Restful开发中,DispatcherServlet的配置一般用/来拦截,会将静态资源一起拦截,需要配置静态资源的处理方案
	
	第一种: 使用默认的Servlet来处理静态资源
	
	
	第二种:通过SpringMVC提供的<mvc:resources>标签来解决
	
	
11.Ant风格的URL: 
	
	如果映射为: @RequestMapping("/*/{id}") 那么请求可以是 /tt/1001/ 也可以使/xxx/1001	

	？号表示单个字符
	
	*号表示多个字符

	** 表示所有路径的所有字符

	
		