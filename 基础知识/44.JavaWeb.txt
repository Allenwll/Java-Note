											JavaWeb
											
			JSP  
				
				Java Server Pages
						
				主要用在交互页面的开发，运行Java语法  充当用户界面。    
				
				一次编写，各处执行
					
			Servlet
				
				Service+Applet
				
					担当客户请求(Web浏览器或其他HTTP客户程序)与服务器响应(HTTP服务器上的数据库或应用程序)的中间层

			JDBC
			
				Java DataBase Connectivity  是一种用于执行SQL语句的Java API
			
			
			JavaBean(Application)
							
					应用组件技术
						
					是Java组件技术的核心
		
常用服务器:
	
	Microsoft IIS、 IBM WebSphere、 BEA WebLogic、Apache和Tomcat等
		
		
分析项目业务关系：
			
	UML unified Modeling Language  统一建模语言
				
		Use Case Diagram  用例图
		
		Class Diagram 类图
		
		Sequence Diagram 时序图等
		
设计模式：
	
	MVC三层架构
		
		Model 模型  处理请求
		
		View  视图  浏览器显示
		
		Controller 控制  业务逻辑
			
		JSP+Servlet+JavaBean
		
		Struts Spring Hibernate
		
JavaWeb程序运行原理

		1.浏览器和Web服务器建立连接
		
				就是与浏览器和服务器的一个TCP Socket套接字连接
				
		2.浏览器发送HTTP请求

				HTTP请求：
					
					请求行：
						
						是一个ASCII文本行，由请求的HTTP方法、请求的URL和HTTP版本组成
						
						
					请求头、消息头:
						
						HTTP协议使用HTTP头来传递请求的元信息
						
						Accept：浏览器可接受的MIME类型。 
						
						Accept-Charset：浏览器可接受的字符集。 
						
						Accept-Encoding：浏览器能够进行解码的数据编码方式，比如gzip。Servlet能够向支持gzip的浏览器返回经gzip编码的HTML页面。许多情形下这可以减少5到10倍的下载时间。 
						
						Accept-Language：浏览器所希望的语言种类，当服务器能够提供一种以上的语言版本时要用到。 
						
						Connection：表示是否需要持久连接。
						
						Content-Length：表示请求消息正文的长度。 
						
						Host：初始URL中的主机和端口。 
						
						Referer：包含一个URL，用户从该URL代表的页面出发访问当前请求的页面。  
						
						User-Agent：浏览器类型，如果Servlet返回的内容与浏览器类型有关则该值非常有用。 
						
						
						通用消息头:	
							
							Connection:用于指定处理完本次请求/响应后，是否还要急需保持连接。
							
							Date:产生当前消息的时间。
							
							Pragma：no-cache. 
							
							Cache-Control：指示浏览器或服务器缓存的具体策略
							
							Content-Length：表示(请求/响应)正文的长度。

					空行:
						
						发送回车符和退行，通知服务器以下不再有请求头
						
					消息体:
						
						HTTP请求中带有查询字符串时，如果是GET方法，查询字符串或表单数据附加在请求行中，那么消息体就没有内容,如果是POST方法，查询字符串或表单数据就添加在消息体中
		
	
		3.服务器端接收客户端的HTTP请求，生成HTTP响应回发
		
				HTTP响应:
					
					状态行:
						
						每个HTTP响应以一个状态行开头，它由HTTP协议版本、响应状态码和响应描述组成
						
						状态码：200(一切正常)，404(所请求资源不存在)，500(服务器内部程序错误)

						
					响应头、应答头:
						
						响应头与请求头一样，也是一个用冒号分隔的名称/值对，冒号前面时候HTTP头的名称，后面是HTTP头的值
					
						Allow 服务器支持哪些请求方法（如GET、POST等） 
					
						Server处理请求的原始服务器的软件信息 
						
						Location 表示客户应当到哪里去提取文档。 
						
						Refresh：告诉浏览器过n秒后自动刷新页面
						
						Content-Type 表示实体文档属于什么MIME类型。
						
						Content-Length 返回的实体内容的长度
						
						Last-Modified 文档的最后改动时间。
						
						Content-Location:实体所在的实际位置路径
				
					空行:
						
						发送回车符和退行，通知服务器以下不再有响应头
						
					消息体
						
						要发送回客户端的HTTL文档或其他要显示的内容等，Web服务器把要发送给客户端的文档信息放在消息体中
						
						
		4.服务器端关闭连接，客户端解析并回发响应，恢复页面
			
				HTTP响应到达客户端后，浏览器先解析HTTP响应中的状态行，查看请求是否成功的状态代码，然后开始一步步解析响应

JavaWeb应用程序组成
			
		1.配置文件web.xml
		
		2.静态文件和JSP
		
		3.类文件和包
		
	组成说明:
		
		配置文件: 每个Web应用程序包括一个配置文件，即web.xml
		
		静态文件和JSP文件
		
		类文件和包: 用于Web应用程序装载和管理自定义的Java代码
		
		网页可以放在Web应用程序的根目录下，根据动态网页或者静态网页的不同放在不同的目录里
		
		图像一般放在images子目录中
		
		Servlet类和JavaBean类: 编译为Class文件后是放在WEB-INF/classes目录中
		
		lib目录用来包含应用程序任何所需要的jar文件
		
		标记描述放在WEB-INF目录下
		
		Applet成怒放在应用的目录下
		
		WEB-INF目录下存放web.xml部署描述文件器
		
JavaWeb主要开发结构
	
	C/S开发  美国Borland公司研发
		
		Client/Server 客户机/服务器结构。
			
			通过将任务合理分配到Client端和Server端，降低了系统的通讯开销，可以充分利用两端硬件环境的优势  

			C/S 结构的软件需要针对不同的操作系统开发不同版本的软件，价值产品更新换代十分快，很难使大量用户同时使用。	代价高，效率低
		
	B/S开发 美国微软公司研发
		
		Browser/Server 浏览器和服务器结构
			
			用户工作界面是通过WWW浏览器来实现，极少部分事务逻辑在前端(Browser)实现，但是主要事务逻辑在服务器端(Server)实现，形成所谓的三层架构。
			
			大大简化了客户端电脑载荷，减轻了系统维护与升级的成本和工作量，降低了用户的总体成本
			
	界面技术： 
	
		DOS字符界面——Windows图形界面或者图形用户界面GUI——Browser浏览器界面
		
	平台体系结构:
	
		单用户——F/S 文件/服务器——C/S 客户端/服务器——B/S 浏览器/服务器

	
	两种结构特点:
	
		C/S
			
			优点
				
				1.响应速度快
					
					由于客户端实现与服务器的直接相连，没有中间环节
					
					当数据少时，B/S软件速度与C/S软件一般，当数据超过十万时，C/S软件变慢，B/S软件能维持稳定速度
				
				2.操作界面漂亮、形式多样，可以充分满足客户自身的个性化要求
					
					似乎可以随意排列界面，但遇到第二客户要求时又要从头做起，比较灵活
					
				3.管理信息系统具有较强的事务处理能力，能够实现复杂的业务流程
				
			缺点
			
				1.需要专门的客户端安装程序，分布功能弱，针对点多面广且不具备网络条件的用户群体，不能够实现快速部署安装和配置
				
				2.兼容性差，对于不同的开发工具，具有较大的局限性，若采用不同工具，需要重新改写程序
				
				3.开发成本较高，需要具有一定专业水准的技术人员才能完成
				
		B/S
			
			优点
				
				1.分布性，可以随时随地进行查询、浏览等业务处理
				
				2.业务扩展简单方便，通过增加页面即可增加服务器功能
				
				3.维护简单方便，只需要改变网页，即可实现所有用户的同步更新
				
				4.开发简单，共享性强
				
			缺点
				
				1.个性化特点明显降低，无法实现具有个性化的功能要求
				
				2.操作是以鼠标为最基本的操作方式，无法满足快速操作的需求
				
				3.页面动态刷新，响应速度明显降低
			
			
			
	
		
	
	
				
							